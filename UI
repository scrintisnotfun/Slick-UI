local WindUI = {}
WindUI.__index = WindUI

function WindUI.new(title)
    local self = setmetatable({}, WindUI)

    local CoreGui = game:GetService("CoreGui")

    -- Main ScreenGui
    self.ScreenGui = Instance.new("ScreenGui")
    self.ScreenGui.Name = "WindUI"
    self.ScreenGui.ResetOnSpawn = false
    self.ScreenGui.Parent = CoreGui

    -- Main Frame
    self.MainFrame = Instance.new("Frame")
    self.MainFrame.Size = UDim2.new(0, 450, 0, 350)
    self.MainFrame.Position = UDim2.new(0.5, -225, 0.5, -175)
    self.MainFrame.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
    self.MainFrame.BackgroundTransparency = 0.1
    self.MainFrame.BorderSizePixel = 0
    self.MainFrame.Parent = self.ScreenGui
    self.MainFrame.ClipsDescendants = true
    self.MainFrame.RoundedCorner = Instance.new("UICorner", self.MainFrame)

    -- Draggable
    self.MainFrame.Active = true
    self.MainFrame.Draggable = true

    -- Shadow effect
    local shadow = Instance.new("Frame")
    shadow.Size = UDim2.new(1, 10, 1, 10)
    shadow.Position = UDim2.new(0, -5, 0, -5)
    shadow.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
    shadow.BackgroundTransparency = 0.7
    shadow.ZIndex = 0
    shadow.Parent = self.MainFrame
    Instance.new("UICorner", shadow)

    -- Title Bar
    local titleBar = Instance.new("Frame")
    titleBar.Size = UDim2.new(1, 0, 0, 40)
    titleBar.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
    titleBar.BorderSizePixel = 0
    titleBar.Parent = self.MainFrame
    Instance.new("UICorner", titleBar)

    local titleLabel = Instance.new("TextLabel")
    titleLabel.Size = UDim2.new(1, -10, 1, 0)
    titleLabel.Position = UDim2.new(0, 10, 0, 0)
    titleLabel.BackgroundTransparency = 1
    titleLabel.Text = title or "WindUI"
    titleLabel.TextColor3 = Color3.fromRGB(240, 240, 240)
    titleLabel.TextXAlignment = Enum.TextXAlignment.Left
    titleLabel.Font = Enum.Font.GothamBold
    titleLabel.TextSize = 22
    titleLabel.Parent = titleBar

    -- Tab Container
    self.TabContainer = Instance.new("Frame")
    self.TabContainer.Size = UDim2.new(0, 120, 1, -40)
    self.TabContainer.Position = UDim2.new(0, 0, 0, 40)
    self.TabContainer.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
    self.TabContainer.BorderSizePixel = 0
    self.TabContainer.Parent = self.MainFrame
    Instance.new("UICorner", self.TabContainer)

    -- Content Frame
    self.ContentFrame = Instance.new("Frame")
    self.ContentFrame.Size = UDim2.new(1, -120, 1, -40)
    self.ContentFrame.Position = UDim2.new(0, 120, 0, 40)
    self.ContentFrame.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
    self.ContentFrame.BorderSizePixel = 0
    self.ContentFrame.Parent = self.MainFrame
    Instance.new("UICorner", self.ContentFrame)

    self.Tabs = {}

    return self
end

-- Create Tab with Hover effect
function WindUI:createTab(tabName)
    local tabButton = Instance.new("TextButton")
    tabButton.Size = UDim2.new(1, -10, 0, 40)
    tabButton.Position = UDim2.new(0, 5, 0, (#self.TabContainer:GetChildren() - 1) * 45)
    tabButton.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
    tabButton.TextColor3 = Color3.fromRGB(240, 240, 240)
    tabButton.Font = Enum.Font.Gotham
    tabButton.TextSize = 18
    tabButton.Text = tabName
    tabButton.BorderSizePixel = 0
    tabButton.Parent = self.TabContainer
    Instance.new("UICorner", tabButton)

    -- Hover effect
    tabButton.MouseEnter:Connect(function()
        tabButton.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
    end)
    tabButton.MouseLeave:Connect(function()
        tabButton.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
    end)

    local tabFrame = Instance.new("Frame")
    tabFrame.Size = UDim2.new(1, 0, 1, 0)
    tabFrame.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
    tabFrame.Visible = false
    tabFrame.Parent = self.ContentFrame
    Instance.new("UICorner", tabFrame)

    self.Tabs[tabName] = tabFrame

    tabButton.MouseButton1Click:Connect(function()
        for _, frame in pairs(self.Tabs) do
            frame.Visible = false
        end
        tabFrame.Visible = true
    end)

    if #self.TabContainer:GetChildren() == 1 then
        tabFrame.Visible = true
    end

    return tabFrame
end

-- Modern Toggle with gradient accent
function WindUI:createToggle(parent, labelText, default, callback)
    local toggleFrame = Instance.new("Frame")
    toggleFrame.Size = UDim2.new(1, -20, 0, 35)
    toggleFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
    toggleFrame.BorderSizePixel = 0
    toggleFrame.Parent = parent
    Instance.new("UICorner", toggleFrame)

    local label = Instance.new("TextLabel")
    label.Size = UDim2.new(1, -70, 1, 0)
    label.Position = UDim2.new(0, 10, 0, 0)
    label.BackgroundTransparency = 1
    label.Text = labelText
    label.TextColor3 = Color3.fromRGB(240, 240, 240)
    label.TextXAlignment = Enum.TextXAlignment.Left
    label.Font = Enum.Font.Gotham
    label.TextSize = 18
    label.Parent = toggleFrame

    local toggleButton = Instance.new("Frame")
    toggleButton.Size = UDim2.new(0, 50, 0, 24)
    toggleButton.Position = UDim2.new(1, -60, 0.5, -12)
    toggleButton.BackgroundColor3 = default and Color3.fromRGB(0, 170, 255) or Color3.fromRGB(60, 60, 60)
    toggleButton.BorderSizePixel = 0
    toggleButton.Parent = toggleFrame
    local toggleCorner = Instance.new("UICorner", toggleButton)
    toggleCorner.CornerRadius = UDim.new(0, 12)

    local knob = Instance.new("Frame")
    knob.Size = UDim2.new(0, 22, 0, 22)
    knob.Position = default and UDim2.new(1, -24, 0, 1) or UDim2.new(0, 1, 0, 1)
    knob.BackgroundColor3 = Color3.fromRGB(240, 240, 240)
    knob.BorderSizePixel = 0
    knob.Parent = toggleButton
    Instance.new("UICorner", knob)

    local state = default

    toggleButton.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            state = not state
            knob:TweenPosition(state and UDim2.new(1, -24, 0, 1) or UDim2.new(0, 1, 0, 1), "Out", "Sine", 0.2, true)
            toggleButton.BackgroundColor3 = state and Color3.fromRGB(0, 170, 255) or Color3.fromRGB(60, 60, 60)
            if callback then callback(state) end
        end
    end)
end

return WindUI
